Particle in Cube HF Jellium

Hartree Fock is variational method to determine best guess molecular orbitals that correspond to lowest energy expectation value of system. Jellium allows inclusion of electron-electron dynamics, nucleus-electron dynamics, etc. This code corresponds to determining HF MO's given arbitary system of atomic orbitals in a cubic basis, then export of those MO's for PIS calculations. AO system based on nmax, representing highest n value for eigenfunction, and each phi dependent on nx, ny and nz combinations.

Our code does the following right now:
- Determines corresponding phi values for nx, ny and nz's based on nmax.
- Calculates the atomic orbitals based on nmax.
- Spits out KE integrals based on nmax. (I think this needs revision)
- Creates initial S matrix and Hcore matrix corresponding to crawdad tutorial.
- Attempts to build initial Guess matrix.
- Skeleton for Two electron integral is in place, but not tested yet.

Phys Chem II Project Code Steps:

1. Phi energy and corresponding nx, ny, & nz variables stored in arrays NPOrbE, NPOrb_x, NPOrb_y, NPOrb_z.
   Eigenfunction value n corresponds to position in array. So energy of Phi where n=1 is NPOrbE[1].

2. Atomic Orbital Overlap (*A array) is determined based on nmax. AO Overlap is complex conjugate of phi * itself, integrated over
   all space. Code here assumed based on orthonormal properties, integration results in 1 or 0. Only stores 1 values at this time. Probably not optimal code... 

3. KE integrals assume same format as AO Overlap calculations. Complex conjugate of phi * itself with energy operation. 
   Code here assumed based on orthonormal properties, results in respective energy value or zero.
   Energy value = hbar*hbar*pi*pi / 2*mass*L*L (nx^2 + ny^2 + nz^2). Believe this is correct..

4. Assumption that initial Hcore for HF only deals with KE currently in (*T array). In order to use *A and *T respectively with 
   crawdad fxns (diagonalize, print_matrix, etc) , need to format according to it. CrawdadFormat() handles this, zeroing out other values. (Need to get C++ & Fortran to play nicely after here to utilize diagnolize functions. Also discrepancy between energy values based on system... not sure why.)

5. Trial two electron integral code from Peter Gill paper here. Function from Dr. Foley. Formatting of phi values to it. 4 for loops...isn't entire array dim^4? for instance, nmax = 2, so dim = nmax*nmax*nmax which is 8, and then 8*8*8*8 combinations of a,b,c,d.
